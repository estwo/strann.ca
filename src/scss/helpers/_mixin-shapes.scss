// CSS Shapes Mixin

@mixin shape-hexagon(
  $width: 50px,
  $height: 44px,
  $bg-color1: transparent,
  $bg-color2: transparent,
  $pseudo-width: 23px,
  $pseudo-height: 20px,
  $pseudo-top: 9px,
  $pseudo-rotate: 60deg,
  $pseudo-skew: $pseudo-rotate / 2,
  $before-left: 13px,
  $after-right: 13px,
  $borders: true,
  $border-width: 2px,
  $border-color1: #fff,
  $border-color2: darken($border-color1, 25%),
  $border-style: solid
)
{
  background-color: $bg-color1;

  @if $borders == true
  {
    border-top: $border-width solid $border-color1;
    border-bottom: $border-width solid $border-color1;
  }

  height: $height;
  position: absolute;
  width: $width / 2;

  &:before,
  &:after
  {
    @if $borders == true
    {
      border-color: $border-color1;
      border-style: $border-style;
    }

    content: "";
    height: $pseudo-height;
    position: absolute;
    top: $pseudo-top;
    width: $pseudo-width;
  }

  &:before
  {
    @include transform(rotate($pseudo-rotate) skew($pseudo-skew));

    @if $borders == true
    {
      border-width: 0 0 $border-width $border-width;
    }

    left: -$before-left;
  }

  &:after
  {
    @include transform(rotate(-$pseudo-rotate) skew(-$pseudo-skew));

    @if $borders == true
    {
      border-width: 0 $border-width $border-width 0;
    }

    right: -$after-right;
  }

  // not sure it makes sense to do hovers yet
  //
  // &:hover
  // {
  //  background-color: $bg-color2;

  //  @if $borders == true
  //  {
  //    border-color: $border-color2;
  //  }

  //  &:before,
  //  &:after
  //  {
  //    background-color: $bg-color2;

  //    @if $borders == true
  //    {
  //      border-color: $border-color2;
  //    }
  //  }
  // }

  &:focus
  {
    outline: 0;
  }
}

@mixin shape-x-plus(
  $width: 25px,
  $bg-color: transparent,
  $stroke-color: #fff,
  $stroke-height: 1px,
  $plus: false
)
{
  position: absolute;
  text-indent: -9999px; // throw any text off the page

  &:before,
  &:after
  {
    background-color: $stroke-color;
    content: "";
    height: $stroke-height;
    left: 50%;
    margin-left: -$width / 2;
    position: absolute;
    top: 50%;
    width: $width;
  }

  @if $plus == false
  {
    &:before
    {
      @include rotate(45deg);
    }

    &:after
    {
      @include rotate(-45deg);
    }
  }
  @else
  {
    &:after
    {
      @include rotate(90deg);
    }
  }
}

@mixin shape-arrow(
  $point-up: false,
  $point-right: false,
  $point-down: false,
  $point-left: false,
  $width: 1.3rem,
  $bg-color: transparent,
  $stroke-color: #fff,
  $stroke-height: 2px,
  $stroke-style: solid,
  $top: auto,
  $right: auto,
  $bottom: auto,
  $left: auto
)
{
  &:before,
  &:after
  {
    content: "";
    position: absolute;
    width: $width;
  }

  &:before
  {
    background-color: $stroke-color;
    bottom: $bottom;
    height: $stroke-height;
    left: $left;
    right: $right;
    top: $top;
    width: $width * 1.5;
  }

  &:after
  {
    @if $point-up == true
    {
      @include rotate(-135deg);
    }

    // only right has been tested (copied over from shape-arrow-head)

    @if $point-right == true
    {
      @include rotate(-45deg);
    }

    @if $point-down == true
    {
      @include rotate(45deg);
    }

    @if $point-left == true
    {
      @include rotate(135deg);
    }

    background-color: $bg-color;
    border-right: $stroke-height $stroke-style $stroke-color;
    border-bottom: $stroke-height $stroke-style $stroke-color;
    bottom: $bottom;
    height: $width;
    left: $left;
    margin-top: -($width / 2);
    right: $right;
    top: $top;
  }
}

@mixin shape-arrow-head(
  $point-up: false,
  $point-right: false,
  $point-down: false,
  $point-left: false,
  $pseudo: after,
  $rotate0: 45deg,
  $rotate1: 135deg,
  $width: 1.3rem,
  $height: $width,
  $bg-color: transparent,
  $stroke-color: #fff,
  $border-widths: 0 2px 2px 0,
  $stroke-style: solid,
  $top: auto,
  $right: auto,
  $bottom: auto,
  $left: auto,
  $margin-dir: top,
  $margin-val: -($width / 2),
  $skew: 0
)
{
  &:#{$pseudo}
  {
    @if $point-up == true
    {
      @include transform(rotate(-$rotate1) skew($skew));
    }

    @if $point-right == true
    {
      @include transform(rotate(-$rotate0) skew($skew));
    }

    @if $point-down == true
    {
      @include transform(rotate($rotate0) skew($skew));
    }

    @if $point-left == true
    {
      @include transform(rotate($rotate1) skew($skew));
    }

    background-color: $bg-color;
    border-color: $stroke-color;
    border-style: $stroke-style;
    border-width: $border-widths;
    bottom: $bottom;
    content: "";
    height: $height;
    left: $left;
    margin-#{$margin-dir}: $margin-val;
    position: absolute;
    right: $right;
    top: $top;
    width: $width;
  }
}

@mixin shape-solid-arrow-head(
  $direction: right,
  $pseudo: before,
  $size: 5px,
  $margin-top: -$size,
  $color: #fff,
  $trbl: right,
  $position-distance: $size,
  $rotation: 0deg
  )
{
  &:#{$pseudo}
  {
    @if $rotation != 0deg
    {
      @include rotate($rotation);
    }

    @if $direction == up
    {
      border-color: transparent transparent $color transparent;
    }

    @else if $direction == right
    {
      border-color: transparent transparent transparent $color;
    }

    @else if $direction == down
    {
      border-color: $color transparent transparent transparent;
    }

    @else if $direction == left
    {
      border-color: transparent $color transparent transparent;
    }

    border-style: solid;
    border-width: $size;
    content: "";
    height: 0;
    margin-top: $margin-top;
    position: absolute;
    #{$trbl}: $position-distance;
    top: 50%;
    width: 0;
  }
}

@mixin shape-checkmark(
  $width: 5px,
  $height: 10px,
  $color: #fff,
  $stroke-height: 2px,
  $left: 5px,
  $top: 15%,
  $rotation: 45deg
)
{
  &:after
  {
    @include rotate(45deg);
    @include position-ab-centered($width, $height, $top: $top);
    border-right: $stroke-height solid $color;
    border-bottom: $stroke-height solid $color;
    content: "";
    left: $left;
  }
}

@mixin shape-magnifying-glass(
  $radius: 13px,
  $radius-margin-top: -$radius + 1,
  $radius-margin-left: $radius-margin-top,
  $border-width: 2px,
  $color1: #fff,
  $color2: darken($color1, 25%),
  $handle-width: $border-width,
  $handle-height: 9px,
  $handle-left: 15px,
  $handle-top: auto,
  $handle-margin-left: 5px
)
{
  &:before,
  &:after
  {
    content: "";
    position: absolute;
    top: 50%;
  }

  &:before // circle
  {
    @include border-radius($radius * 2);
    border: $border-width solid $color1;
    height: $radius;
    left: 50%;
    margin-top: $radius-margin-top;
    margin-left: $radius-margin-left;
    width: $radius;
  }

  &:after // handle
  {
    @include rotate(-45deg);
    background-color: $color1;
    height: $handle-height;
    left: $handle-left;
    margin-left: $handle-margin-left;
    width: $handle-width;
    top: $handle-top;
  }

  // might make more sense to control hovers outside of the mixin for now
  //
  // &:hover
  // {
  //  &:before
  //  {
  //    border-color: $color2;
  //  }
  //  &:after
  //  {
  //    background-color: $color2;
  //  }
  // }
}

@mixin shape-menu-icon(
  $width: 56px,
  $height: 49px,
  $bg-color: transparent,
  $color: #fff,
  $stroke-height: 4px,
  $stroke-gap: 6px
)
{
  background-color: $bg-color;
  border-top: $stroke-height solid $color;
  height: $height;
  position: relative;
  width: $width;

  &:before,
  &:after
  {
    background-color: $color;
    content: "";
    height: $stroke-height;
    left: 0;
    position: absolute;
    top: $stroke-gap;
    width: 100%;
  }

  &:after
  {
    top: $stroke-gap + ($stroke-height + $stroke-gap);
  }
}
